version: '3.1'

volumes:
  postgresql_data:

services:
  gateway:
    container_name: gateway
    build:
      context: .
      dockerfile: ./backend-gateway/Dockerfile
    ports:
      - "7001:7001"
    depends_on:
      kafka0:
        condition: service_healthy
        restart: true
      db:
        condition: service_healthy
        restart: true

  predictor:
    container_name: predictor
    build:
      context: .
      dockerfile: ./predictor/Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      kafka0:
        condition: service_healthy
        restart: true

  db:
    container_name: db
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 5s

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka0:29092
      DYNAMIC_CONFIG_ENABLED: "true"

  kafka0:
    container_name: kafka
    image: confluentinc/cp-kafka:7.7.1.arm64
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka0:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://kafka0:29092,CONTROLLER://kafka0:29093,PLAINTEXT_HOST://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka0:29093"
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    healthcheck:
      test: ["CMD-SHELL", "nc -z kafka 9092"]
      interval: 15s
      timeout: 15s
      retries: 10
      start_period: 5s

  kafka-init-topics:
    container_name: init-topics
    image: confluentinc/cp-kafka:7.7.1.arm64
    depends_on:
      - kafka0
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka0:29092 1 30 && \
      kafka-topics --create --topic tasks --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092' && \
      kafka-topics --create --topic completed --partitions 1 --replication-factor 1 --if-not-exists --bootstrap-server kafka0:29092'"
